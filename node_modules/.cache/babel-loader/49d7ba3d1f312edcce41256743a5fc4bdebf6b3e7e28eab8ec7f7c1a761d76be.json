{"ast":null,"code":"import { doc, getDoc, setDoc, collection, getDocs, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"../lib/firebase\";\nimport { USERS_COLLECTION, USER_ADDRESSES_SUB, USER_ORDERS_SUB } from \"../lib/collections\";\nimport { stripUndefined } from \"../lib/firestore-utils\";\nexport async function loadUserData(uid) {\n  const ref = doc(db, USERS_COLLECTION, uid);\n  const snap = await getDoc(ref);\n  return snap.exists() ? snap.data() : {};\n}\nexport async function saveWishlist(uid, wishlist) {\n  const ref = doc(db, USERS_COLLECTION, uid);\n  await setDoc(ref, stripUndefined({\n    wishlist\n  }), {\n    merge: true\n  });\n}\nexport async function saveCart(uid, cart) {\n  const ref = doc(db, USERS_COLLECTION, uid);\n  await setDoc(ref, stripUndefined({\n    cart\n  }), {\n    merge: true\n  });\n}\nexport async function clearOldUserData(uid) {\n  const addrSnap = await getDocs(collection(db, \"users\", uid, USER_ADDRESSES_SUB));\n  for (const d of addrSnap.docs) {\n    await deleteDoc(doc(db, \"users\", uid, USER_ADDRESSES_SUB, d.id));\n  }\n  const ordSnap = await getDocs(collection(db, \"users\", uid, USER_ORDERS_SUB));\n  for (const d of ordSnap.docs) {\n    await deleteDoc(doc(db, \"users\", uid, USER_ORDERS_SUB, d.id));\n  }\n  await deleteDoc(doc(db, \"users\", uid));\n}","map":{"version":3,"names":["doc","getDoc","setDoc","collection","getDocs","deleteDoc","db","USERS_COLLECTION","USER_ADDRESSES_SUB","USER_ORDERS_SUB","stripUndefined","loadUserData","uid","ref","snap","exists","data","saveWishlist","wishlist","merge","saveCart","cart","clearOldUserData","addrSnap","d","docs","id","ordSnap"],"sources":["D:/JHFshop/src/services/userData.ts"],"sourcesContent":["import { doc, getDoc, setDoc, collection, getDocs, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"../lib/firebase\";\nimport { USERS_COLLECTION, USER_ADDRESSES_SUB, USER_ORDERS_SUB } from \"../lib/collections\";\nimport { stripUndefined } from \"../lib/firestore-utils\";\nimport type { CartItem } from \"../components/cart-sheet\";\n\nexport type UserStoredData = {\n  wishlist?: string[];\n  cart?: CartItem[];\n};\n\nexport async function loadUserData(uid: string): Promise<UserStoredData> {\n  const ref = doc(db, USERS_COLLECTION, uid);\n  const snap = await getDoc(ref);\n  return (snap.exists() ? (snap.data() as UserStoredData) : {}) as UserStoredData;\n}\n\nexport async function saveWishlist(uid: string, wishlist: string[]) {\n  const ref = doc(db, USERS_COLLECTION, uid);\n  await setDoc(ref, stripUndefined({ wishlist }), { merge: true });\n}\n\nexport async function saveCart(uid: string, cart: CartItem[]) {\n  const ref = doc(db, USERS_COLLECTION, uid);\n  await setDoc(ref, stripUndefined({ cart }), { merge: true });\n}\n\nexport async function clearOldUserData(uid: string): Promise<void> {\n  const addrSnap = await getDocs(collection(db, \"users\", uid, USER_ADDRESSES_SUB));\n  for (const d of addrSnap.docs) {\n    await deleteDoc(doc(db, \"users\", uid, USER_ADDRESSES_SUB, d.id));\n  }\n  const ordSnap = await getDocs(collection(db, \"users\", uid, USER_ORDERS_SUB));\n  for (const d of ordSnap.docs) {\n    await deleteDoc(doc(db, \"users\", uid, USER_ORDERS_SUB, d.id));\n  }\n  await deleteDoc(doc(db, \"users\", uid));\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,SAAS,QAAQ,oBAAoB;AACxF,SAASC,EAAE,QAAQ,iBAAiB;AACpC,SAASC,gBAAgB,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,oBAAoB;AAC1F,SAASC,cAAc,QAAQ,wBAAwB;AAQvD,OAAO,eAAeC,YAAYA,CAACC,GAAW,EAA2B;EACvE,MAAMC,GAAG,GAAGb,GAAG,CAACM,EAAE,EAAEC,gBAAgB,EAAEK,GAAG,CAAC;EAC1C,MAAME,IAAI,GAAG,MAAMb,MAAM,CAACY,GAAG,CAAC;EAC9B,OAAQC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAID,IAAI,CAACE,IAAI,CAAC,CAAC,GAAsB,CAAC,CAAC;AAC9D;AAEA,OAAO,eAAeC,YAAYA,CAACL,GAAW,EAAEM,QAAkB,EAAE;EAClE,MAAML,GAAG,GAAGb,GAAG,CAACM,EAAE,EAAEC,gBAAgB,EAAEK,GAAG,CAAC;EAC1C,MAAMV,MAAM,CAACW,GAAG,EAAEH,cAAc,CAAC;IAAEQ;EAAS,CAAC,CAAC,EAAE;IAAEC,KAAK,EAAE;EAAK,CAAC,CAAC;AAClE;AAEA,OAAO,eAAeC,QAAQA,CAACR,GAAW,EAAES,IAAgB,EAAE;EAC5D,MAAMR,GAAG,GAAGb,GAAG,CAACM,EAAE,EAAEC,gBAAgB,EAAEK,GAAG,CAAC;EAC1C,MAAMV,MAAM,CAACW,GAAG,EAAEH,cAAc,CAAC;IAAEW;EAAK,CAAC,CAAC,EAAE;IAAEF,KAAK,EAAE;EAAK,CAAC,CAAC;AAC9D;AAEA,OAAO,eAAeG,gBAAgBA,CAACV,GAAW,EAAiB;EACjE,MAAMW,QAAQ,GAAG,MAAMnB,OAAO,CAACD,UAAU,CAACG,EAAE,EAAE,OAAO,EAAEM,GAAG,EAAEJ,kBAAkB,CAAC,CAAC;EAChF,KAAK,MAAMgB,CAAC,IAAID,QAAQ,CAACE,IAAI,EAAE;IAC7B,MAAMpB,SAAS,CAACL,GAAG,CAACM,EAAE,EAAE,OAAO,EAAEM,GAAG,EAAEJ,kBAAkB,EAAEgB,CAAC,CAACE,EAAE,CAAC,CAAC;EAClE;EACA,MAAMC,OAAO,GAAG,MAAMvB,OAAO,CAACD,UAAU,CAACG,EAAE,EAAE,OAAO,EAAEM,GAAG,EAAEH,eAAe,CAAC,CAAC;EAC5E,KAAK,MAAMe,CAAC,IAAIG,OAAO,CAACF,IAAI,EAAE;IAC5B,MAAMpB,SAAS,CAACL,GAAG,CAACM,EAAE,EAAE,OAAO,EAAEM,GAAG,EAAEH,eAAe,EAAEe,CAAC,CAACE,EAAE,CAAC,CAAC;EAC/D;EACA,MAAMrB,SAAS,CAACL,GAAG,CAACM,EAAE,EAAE,OAAO,EAAEM,GAAG,CAAC,CAAC;AACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}